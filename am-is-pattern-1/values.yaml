# Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

wso2:
  # WSO2 Subscription parameters (https://wso2.com/subscription/)
  # If provided, these parameters will be used to obtain official WSO2 product Docker images available at WSO2 Private Docker Registry (https://docker.wso2.com/)
  # for this deployment
  subscription:
    username: ""
    password: ""

  centralizedLogging:
    enabled: false

  deployment:
    dependencies:
      # The configuration should be set to be 'true' if a MySQL database should be spawned as a pod within the cluster
      mysql: true
      # Enable NFS dynamic provisioner for Kubernetes
      nfsServerProvisioner: false

    # Persisted and shared runtime artifacts for API Manager
    # See official documentation (from https://apim.docs.wso2.com/en/latest/install-and-setup/setup/reference/common-runtime-and-configuration-artifacts/#persistent-runtime-artifacts)
    persistentRuntimeArtifacts:
      # Kubernetes Storage Class to be used to dynamically provision the relevant Persistent Volumes
      # Only persistent storage solutions supporting ReadWriteMany access mode are applicable (https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes)
      # Defaults to Kubernetes Storage Class generated using the NFS Server Provisioner (https://github.com/helm/charts/tree/master/stable/nfs-server-provisioner)
      storageClass: &storage_class "nfs"

      # Define capacities for persistent runtime artifact directories which are shared between instances of the relevant API Manager profile
      sharedArtifacts:
        capacity:
          # For execution plans shared between the Traffic Manager profile instances
          executionPlans: 20M
          # For synapse artifacts of APIs shared between the Gateway profile instances
          synapseConfigs: 50M

      # Persistent runtime artifacts for Apache Solr-based indexing
      apacheSolrIndexing:
        # Indicates if persistence of the runtime artifacts for Apache Solr-based indexing is enabled
        # By default, this is disabled
        enabled: false
        # Define capacities for persistent runtime artifact directories
        capacity:
          # For persisting the H2 based local Carbon database file
          carbonDatabase: 50M
          # For persisting the indexed data
          solrIndexedData: 50M

    am:
      # Container image configurations
      # If a custom image must be used, uncomment 'dockerRegistry' and provide its value
      # dockerRegistry: ""
      imageName: "wso2am"
      imageTag: "3.2.0"
      # Refer to the Kubernetes documentation on updating images (https://kubernetes.io/docs/concepts/containers/images/#updating-images)
      imagePullPolicy: Always

      # Indicates whether the container is running
      livenessProbe:
        # Number of seconds after the container has started before liveness probes are initiated
        initialDelaySeconds: 180
        # How often (in seconds) to perform the probe
        periodSeconds: 10
      # Indicates whether the container is ready to service requests
      readinessProbe:
        # Number of seconds after the container has started before readiness probes are initiated
        initialDelaySeconds: 180
        # How often (in seconds) to perform the probe
        periodSeconds: 10

      resources:
        # These are the minimum resource recommendations for running WSO2 API Management product profiles
        # as per official documentation (https://apim.docs.wso2.com/en/latest/install-and-setup/install/installation-prerequisites/)
        requests:
          memory: "2Gi"
          cpu: "1500m"
        limits:
          memory: "2Gi"
          cpu: "1500m"
        # JVM settings
        # These are the resource allocation configurations associated with the JVM
        # Refer to the official documentation for advanced details (https://apim.docs.wso2.com/en/latest/install-and-setup/install/installation-prerequisites/)
        jvm:
          # Resource allocation for the Java Heap
          heap:
            memory:
              # Initial and minimum Heap size
              xms: "1024m"
              # Maximum Heap size
              xmx: "1024m"

      # If the deployment configurations for the WSO2 API Manager v3.2.0 (<WSO2AM>/repository/conf/deployment.toml),
      # add the customized configuration file under (wso2 -> deployment -> am -> config -> deployment.toml)
#      config: ""
#        deployment.toml: |-
#          # deployment configurations for the WSO2 API Manager v3.2.0 (<WSO2AM>/repository/conf/deployment.toml)

      # Configure Ingresses
      ingress:
        management:
          # Hostname for API Manager Carbon Management Console, Publisher, DevPortal and Admin Portal
          hostname: "am.wso2.com"
          # Annotations for the API Manager Publisher-DevPortal services Ingress
          annotations:
            kubernetes.io/ingress.class: "nginx"
            nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
            nginx.ingress.kubernetes.io/affinity: "cookie"
            nginx.ingress.kubernetes.io/session-cookie-name: "route"
            nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
        gateway:
          # Hostname for Gateway profile
          hostname: "gateway.am.wso2.com"
          # Annotations for the API Manager Gateway service Ingress
          annotations:
            kubernetes.io/ingress.class: "nginx"
            nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"


    wso2is:
      # Container image configurations
      # If a custom image must be used, uncomment 'dockerRegistry' and provide its value
      # dockerRegistry: ""
      imageName: "wso2iskm"
      imageTag: "5.10.0"
      # Refer to the Kubernetes documentation on updating images (https://kubernetes.io/docs/concepts/containers/images/#updating-images)
      imagePullPolicy: IfNotPresent

      # Number of deployment replicas
      replicas: 1

      # Indicates whether the container is running
      livenessProbe:
        # Number of seconds after the container has started before liveness probes are initiated
        initialDelaySeconds: 120
        # How often (in seconds) to perform the probe
        periodSeconds: 10
      # Indicates whether the container is ready to service requests
      readinessProbe:
        # Number of seconds after the container has started before readiness probes are initiated
        initialDelaySeconds: 120
        # How often (in seconds) to perform the probe
        periodSeconds: 10

      resources:
        # These are the minimum resource recommendations for running WSO2 Identity and Access Management product profiles
        # as per official documentation (https://is.docs.wso2.com/en/latest/setup/installation-prerequisites/)
        requests:
          # The minimum amount of memory that should be allocated for a Pod
          memory: "2Gi"
          # The minimum amount of CPU that should be allocated for a Pod
          cpu: "1500m"
        limits:
          # The maximum amount of memory that should be allocated for a Pod
          memory: "3Gi"
          # The maximum amount of CPU that should be allocated for a Pod
          cpu: "2000m"
        # JVM settings
        # These are the resource allocation configurations associated with the JVM
        # Refer to the official documentation for advanced details (https://is.docs.wso2.com/en/latest/setup/performance-tuning-recommendations/#jvm-settings)
        jvm:
          # Resource allocation for the Java Heap
          heap:
            memory:
              # Initial and minimum Heap size
              xms: "2048m"
              # Maximum Heap size
              xmx: "2048m"

      ingress:
        identity:
          # Hostname for Identity Server
          hostname: "identity.wso2.com"
          # Annotations for the Identity service Ingress
          annotations:
            kubernetes.io/ingress.class: "nginx"
            nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
            nginx.ingress.kubernetes.io/affinity: "cookie"
            nginx.ingress.kubernetes.io/session-cookie-name: "route"
            nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"

kubernetes:
  # Name of Kubernetes service account
  serviceAccount: "wso2am-pattern-1-svc-account"

# Override sub chart parameters
mysql-am:
  mysql:
    persistence:
      storageClass: *storage_class
